package kr.or.ddit.review.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import kr.or.ddit.member.vo.MemberVO;
import kr.or.ddit.review.service.IReviewService;
import kr.or.ddit.review.service.ReviewServiceImpl;
import kr.or.ddit.review.vo.ReviewVO;

/**
 * Servlet implementation class ReviewInsert
 */
@WebServlet("/reviewInsert.do")
public class ReviewInsert extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	request.setCharacterEncoding("utf-8");
    	request.getRequestDispatcher("/WEB-INF/views/review/reviewInsertForm.jsp").forward(request, response);
    }
    
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	request.setCharacterEncoding("utf-8");
    	// 폼에서 전달된 데이터 받기
        String reviewContent = request.getParameter("review_content");
        String formreviewStar = request.getParameter("review_star");
        
       

        // 세션에서 로그인된 사용자 정보 가져오기
        HttpSession session = request.getSession();
        MemberVO loggedInMember = (MemberVO) session.getAttribute("loggedInMember");

        if (loggedInMember != null) {
            String memId = loggedInMember.getMemId();
            
     //      IReviewService service = ReviewServiceImpl.getInstance();
//            Integer prodId = service.getProdId(memId);
            
//            if (prodId == null) {
//                request.setAttribute("error", "리뷰를 작성할 수 있는 상품이 없습니다.");
//                request.getRequestDispatcher("/WEB-INF/views/review/reviewInsertForm.jsp").forward(request, response);
//                return;
//            }

            // ReviewVO 객체 생성
            ReviewVO review = new ReviewVO();
            review.setMem_id(memId);
            review.setReview_content(reviewContent);
            
       //    System.out.println( review.getReview_content());
           
            int reviewStar =0;
            if(formreviewStar !=null && !formreviewStar.trim().isEmpty()) {
            	try {
                    // 문자열을 정수로 변환합니다.
                    reviewStar = Integer.parseInt(formreviewStar);
                } catch (NumberFormatException e) {
                    // 변환 실패 시 예외 처리
                    request.setAttribute("error", "유효하지 않은 평점입니다.");
                    request.getRequestDispatcher("/WEB-INF/views/review/reviewInsertForm.jsp").forward(request, response);
                    return;
                }
            } else {
                // reviewStarStr가 null 또는 빈 문자열인 경우 오류 처리
                request.setAttribute("error", "평점은 필수 입력 항목입니다.");
                request.getRequestDispatcher("/WEB-INF/views/review/reviewInsertForm.jsp").forward(request, response);
                return;
            }
         // 변환된 정수 값을 ReviewVO 객체에 설정합니다.
            review.setReview_star(reviewStar);
          

            // 서비스 객체를 통해 리뷰 저장
            IReviewService service = ReviewServiceImpl.getInstance();
            int result = service.insertReview(review);
            
            if (result > 0) {
                // 성공
                response.sendRedirect(request.getContextPath() + "/myreviewList.do");
            } else {
                // 실패
                request.setAttribute("error", "리뷰 작성 실패");
                request.getRequestDispatcher("/WEB-INF/views/review/reviewInsertForm.jsp").forward(request, response);
            }
        } else {
            // 로그인되지 않은 경우, 로그인 페이지
            response.sendRedirect(request.getContextPath() + "/member/login.do");
        }
    }
}
