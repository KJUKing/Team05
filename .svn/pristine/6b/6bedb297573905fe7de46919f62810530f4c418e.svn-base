package kr.or.ddit.prod.controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import kr.or.ddit.prod.service.IMainCateService;
import kr.or.ddit.prod.service.IOprodService;
import kr.or.ddit.prod.service.IOptionService;
import kr.or.ddit.prod.service.IProdService;
import kr.or.ddit.prod.service.MainCateServiceImpl;
import kr.or.ddit.prod.service.OprodServiceImpl;
import kr.or.ddit.prod.service.OptionServiceImpl;
import kr.or.ddit.prod.service.ProdServiceImpl;
import kr.or.ddit.prod.vo.MainCateVO;
import kr.or.ddit.prod.vo.OprodVO;
import kr.or.ddit.prod.vo.OptionVO;
import kr.or.ddit.prod.vo.ProdVO;

@WebServlet("/prodInsert.do")
@MultipartConfig	// 파일 업로드 처리용 (상품 사진 업로드)
public class ProdInsert extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		IMainCateService mcService = MainCateServiceImpl.getInstance();

//		IProdService prodService = ProdServiceImpl.getInstance();
		
//		List<ProdVO> prodList = prodService.getAllProd();

		List<MainCateVO> mcList = mcService.getAllMainCate();

//		request.setAttribute("prodList", prodList);
		request.setAttribute("mcList", mcList);

		System.out.println("mcList : @@@@@ "+ mcList);

		request.getRequestDispatcher("/WEB-INF/views/prod/ProdForm.jsp")
		.forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("application/json; charset=utf-8");

		
		// POST방식으로 요청할 때는 입력한 회원 정보를 받아서 프로필 사진을 저장하고
		// 회원 정보는 DB에 저장하는 기능을 구현한다.
				
		// 사용자가 업로드한 파일이 저장될 서버쪽의 폴더 경로 설정
		//String uploadPath = "d:/d_other/uploadFiles";
		String uploadPath = getServletContext().getRealPath("/images/prod");
		
		// 저장될 폴더가 없으면 폴더를 만들어준다.
		File uploadDir = new File(uploadPath);
		if(!uploadDir.exists()) {
			uploadDir.mkdirs();
		}
		
		request.setCharacterEncoding("utf-8");
		
		
		//상품아이디,상품이름,상품설명,상품가격,상품상태
		
		// 상품 입력
		String prodName = request.getParameter("prod_name");
		String prodCont = request.getParameter("prod_content");
		int prodPrice =  Integer.parseInt(request.getParameter("prod_price"));
		String prodImage = request.getParameter("prod_image");
		String prodYn = request.getParameter("prod_yn");
		int prodSale =  Integer.parseInt(request.getParameter("prod_sale"));
		String deprod = request.getParameter("mainId");
		
		System.out.println("prodName : " +  prodName);
		System.out.println("prodCont : " + prodCont);
		System.out.println("prodPrice : " + prodPrice);
		System.out.println("prodImage : " + prodImage);
		System.out.println("prodYn : " + prodYn);
		System.out.println("prodSale : " + prodSale);
		
		ProdVO pvo = new ProdVO();
		pvo.setProd_name(prodName);
		pvo.setProd_content(prodCont);
		pvo.setProd_price(prodPrice);
		pvo.setProd_yn(prodYn);
		pvo.setProd_sale(prodSale);
		pvo.setDcate_id(deprod);
		
		String optionName = request.getParameter("optionName");
		String optionValue = request.getParameter("optionValue");
		
		String oprodQty = request.getParameter("oprodQty");
	
		System.out.println("인서트 옵션Name : " + optionName);
		System.out.println("인서트 옵션Value : " + optionValue);
		System.out.println("인서트 재고수량Qty : " + oprodQty);
		
		IOptionService optService = OptionServiceImpl.getInstance();
		IOprodService oprService = OprodServiceImpl.getInstance();
		
		OptionVO optvo = new OptionVO();
		optvo.setOption_name(optionName);
		optvo.setOption_value(optionValue);		
		
		OprodVO oprvo = new OprodVO();
		oprvo.setOprod_qty(Integer.parseInt(oprodQty));
		
		// 여기 안됨
		// 이걸 도대체 어디서 어떻게 가져오냐...
		oprvo.setProd_id(pvo.getProd_id());
		oprvo.setOption_id(optvo.getOption_id());
		
		System.out.println("이거만하면 인서트 끝남 (상품 아이디) : " + pvo.getProd_id());
		System.out.println("이거만하면 인서트 끝남 (옵션 아이디) : " + optvo.getOption_id());
		
		optService.insertOption(optvo);
		
		oprService.insertOprod(oprvo);
		
		// form의 file입력요소의 name값은 Part객체의 이름역할을 한다.
		// 이 이름을 이용하여 Part객체를 구한다.
		
		
		//PROD_IMAGE      상품이미지
		Part part = request.getPart("prod_image");
		
		if(part!=null) {
			String fileName = extractFilename(part);
			
			if(!"".equals(fileName)) {
				try {
					part.write(uploadPath + File.separator + fileName);
					
					pvo.setProd_image(fileName);  // DB에 저장할 파일명을 VO객체에 저장
				} catch (Exception e) {
					pvo.setProd_image(null);  // 프로필 사진이 오류가 생기면...
				}
			}
		}
		
		// 회원 정보를 DB에 insert한다.
		IProdService service = ProdServiceImpl.getInstance();
		service.insertProd(pvo);

		// 작업이 완료되면 List페이지로 이동
		response.sendRedirect(request.getContextPath()+"/prodList.do");
		

		
	}
	
	// Part구조 안에서 파일명을 찾는 메서드
	private String extractFilename(Part part) {
		String fileName = "";
		
		String contentDisposition = part.getHeader("content-disposition");
		String[] items = contentDisposition.split(";");
		for(String item : items) {
			if(item.trim().startsWith("filename")) {  
				// filename="test1.txt"
				fileName = item.substring(item.indexOf("=")+2, item.length()-1);
			}
		}
		
		return fileName;
	}

}
